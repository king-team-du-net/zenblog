security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            # entry_point: App\Security\AuthenticationEntryPoint
            # user_checker: App\Security\UserChecker
            custom_authenticator: 
                - App\Security\Authenticator
            logout:
                path: auth_logout
                # target: auth_login
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800
                path: /
            switch_user: { role: ROLE_ADMINISTRATOR }
            # access_denied_handler: App\Security\AccessDeniedHandler

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_EDITOR:
            - ROLE_USER
        ROLE_ADMIN:
            - ROLE_USER
            - ROLE_EDITOR
            - ROLE_EASYADMIN_ADMIN
            - ROLE_EASYADMIN_USER_ADMIN_USER_VIEW
        ROLE_SUPER_ADMIN:
            - ROLE_ADMIN
            - ROLE_ALLOWED_TO_SWITCH
        ROLE_ADMINISTRATOR: 
            - ROLE_SUPER_ADMIN

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
